---
layout: post
title: "PHP高效开发"
date: 2015-05-25
categories:
---


## 在开发环境打印错误信息
 * 在php.ini中设置display_errors = Off
 * 在php.ini中设置error_reporting = E_ALL | E_STRICT

1	E_ERROR (integer)	致命的运行时错误。这类错误一般是不可恢复的情况，例如内存分配导致的问题。后果是导致脚本终止不再继续运行。	 
2	E_WARNING (integer)	运行时警告 (非致命错误)。仅给出提示信息，但是脚本不会终止运行。	 
4	E_PARSE (integer)	编译时语法解析错误。解析错误仅仅由分析器产生。	 
8	E_NOTICE (integer)	运行时通知。表示脚本遇到可能会表现为错误的情况，但是在可以正常运行的脚本里面也可能会有类似的通知。	 
16	E_CORE_ERROR (integer)	在PHP初始化启动过程中发生的致命错误。该错误类似 E_ERROR，但是是由PHP引擎核心产生的。	since PHP 4
32	E_CORE_WARNING (integer)	PHP初始化启动过程中发生的警告 (非致命错误) 。类似 E_WARNING，但是是由PHP引擎核心产生的。	since PHP 4
64	E_COMPILE_ERROR (integer)	致命编译时错误。类似E_ERROR, 但是是由Zend脚本引擎产生的。	since PHP 4
128	E_COMPILE_WARNING (integer)	编译时警告 (非致命错误)。类似 E_WARNING，但是是由Zend脚本引擎产生的。	since PHP 4
256	E_USER_ERROR (integer)	用户产生的错误信息。类似 E_ERROR, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。	since PHP 4
512	E_USER_WARNING (integer)	用户产生的警告信息。类似 E_WARNING, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。	since PHP 4
1024	E_USER_NOTICE (integer)	用户产生的通知信息。类似 E_NOTICE, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。	since PHP 4
2048	E_STRICT (integer)	启用 PHP 对代码的修改建议，以确保代码具有最佳的互操作性和向前兼容性。	since PHP 5
4096	E_RECOVERABLE_ERROR (integer)	可被捕捉的致命错误。 它表示发生了一个可能非常危险的错误，但是还没有导致PHP引擎处于不稳定的状态。 如果该错误没有被用户自定义句柄捕获 (参见 set_error_handler())，将成为一个 E_ERROR　从而脚本会终止运行。	since PHP 5.2.0
8192	E_DEPRECATED (integer)	运行时通知。启用后将会对在未来版本中可能无法正常工作的代码给出警告。	since PHP 5.3.0
16384	E_USER_DEPRECATED (integer)	用户产少的警告信息。 类似 E_DEPRECATED, 但是是由用户自己在代码中使用PHP函数 trigger_error()来产生的。	since PHP 5.3.0
30719	E_ALL (integer)	E_STRICT出外的所有错误和警告信息。	30719 in PHP 5.3.x, 6143 in PHP 5.2.x, 2047 previously